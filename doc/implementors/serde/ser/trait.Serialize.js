(function() {var implementors = {};
implementors["libpasta"] = ["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_bytes/0.10.1/serde_bytes/bytebuf/struct.ByteBuf.html\" title=\"struct serde_bytes::bytebuf::ByteBuf\">ByteBuf</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_bytes/0.10.1/serde_bytes/struct.Bytes.html\" title=\"struct serde_bytes::Bytes\">Bytes</a>&lt;'a&gt;","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.2/serde_json/map/struct.Map.html\" title=\"struct serde_json::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/collections/string/struct.String.html\" title=\"struct collections::string::String\">String</a>, <a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.2/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt;","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.2/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.2/serde_json/number/struct.Number.html\" title=\"struct serde_json::number::Number\">Number</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"https://docs.rs/serde_yaml/0.7.1/serde_yaml/value/enum.Value.html\" title=\"enum serde_yaml::value::Value\">Value</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_yaml/0.7.1/serde_yaml/number/struct.Number.html\" title=\"struct serde_yaml::number::Number\">Number</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_yaml/0.7.1/serde_yaml/mapping/struct.Mapping.html\" title=\"struct serde_yaml::mapping::Mapping\">Mapping</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"serde_mcf/enum.Hashes.html\" title=\"enum serde_mcf::Hashes\">Hashes</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_mcf/legacy/struct.BcryptHash.html\" title=\"struct serde_mcf::legacy::BcryptHash\">BcryptHash</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_mcf/struct.McfHash.html\" title=\"struct serde_mcf::McfHash\">McfHash</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libpasta/hashing/struct.Output.html\" title=\"struct libpasta::hashing::Output\">Output</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libpasta/hashing/enum.Algorithm.html\" title=\"enum libpasta::hashing::Algorithm\">Algorithm</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libpasta/primitives/struct.Primitive.html\" title=\"struct libpasta::primitives::Primitive\">Primitive</a>",];
implementors["serde_mcf"] = ["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_bytes/0.10.1/serde_bytes/bytebuf/struct.ByteBuf.html\" title=\"struct serde_bytes::bytebuf::ByteBuf\">ByteBuf</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_bytes/0.10.1/serde_bytes/struct.Bytes.html\" title=\"struct serde_bytes::Bytes\">Bytes</a>&lt;'a&gt;","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_mcf/struct.Map.html\" title=\"struct serde_mcf::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/collections/string/struct.String.html\" title=\"struct collections::string::String\">String</a>, <a class=\"enum\" href=\"serde_mcf/enum.Value.html\" title=\"enum serde_mcf::Value\">Value</a>&gt;","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"serde_mcf/enum.Value.html\" title=\"enum serde_mcf::Value\">Value</a>","impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.11/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.2/serde_json/number/struct.Number.html\" title=\"struct serde_json::number::Number\">Number</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
